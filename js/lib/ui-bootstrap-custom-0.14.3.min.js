/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.14.3 - 2015-10-23
 * License: MIT
 */
angular.module("ui.bootstrap",["ui.bootstrap.buttons"]),angular.module("ui.bootstrap.buttons",[]).constant("uibButtonConfig",{activeClass:"active",toggleEvent:"click"}).controller("UibButtonsController",["uibButtonConfig",function(n){this.activeClass=n.activeClass||"active",this.toggleEvent=n.toggleEvent||"click"}]).directive("uibBtnRadio",function(){return{require:["uibBtnRadio","ngModel"],controller:"UibButtonsController",controllerAs:"buttons",link:function(n,e,t,o){var l=o[0],i=o[1];e.find("input").css({display:"none"}),i.$render=function(){e.toggleClass(l.activeClass,angular.equals(i.$modelValue,n.$eval(t.uibBtnRadio)))},e.on(l.toggleEvent,function(){if(!t.disabled){var o=e.hasClass(l.activeClass);(!o||angular.isDefined(t.uncheckable))&&n.$apply(function(){i.$setViewValue(o?null:n.$eval(t.uibBtnRadio)),i.$render()})}})}}}).directive("uibBtnCheckbox",function(){return{require:["uibBtnCheckbox","ngModel"],controller:"UibButtonsController",controllerAs:"button",link:function(n,e,t,o){function l(){return a(t.btnCheckboxTrue,!0)}function i(){return a(t.btnCheckboxFalse,!1)}function a(e,t){return angular.isDefined(e)?n.$eval(e):t}var r=o[0],s=o[1];e.find("input").css({display:"none"}),s.$render=function(){e.toggleClass(r.activeClass,angular.equals(s.$modelValue,l()))},e.on(r.toggleEvent,function(){t.disabled||n.$apply(function(){s.$setViewValue(e.hasClass(r.activeClass)?i():l()),s.$render()})})}}}),angular.module("ui.bootstrap.buttons").value("$buttonsSuppressWarning",!1).controller("ButtonsController",["$controller","$log","$buttonsSuppressWarning",function(n,e,t){t||e.warn("ButtonsController is now deprecated. Use UibButtonsController instead."),angular.extend(this,n("UibButtonsController"))}]).directive("btnRadio",["$log","$buttonsSuppressWarning",function(n,e){return{require:["btnRadio","ngModel"],controller:"ButtonsController",controllerAs:"buttons",link:function(t,o,l,i){e||n.warn("btn-radio is now deprecated. Use uib-btn-radio instead.");var a=i[0],r=i[1];o.find("input").css({display:"none"}),r.$render=function(){o.toggleClass(a.activeClass,angular.equals(r.$modelValue,t.$eval(l.btnRadio)))},o.bind(a.toggleEvent,function(){if(!l.disabled){var n=o.hasClass(a.activeClass);(!n||angular.isDefined(l.uncheckable))&&t.$apply(function(){r.$setViewValue(n?null:t.$eval(l.btnRadio)),r.$render()})}})}}}]).directive("btnCheckbox",["$document","$log","$buttonsSuppressWarning",function(n,e,t){return{require:["btnCheckbox","ngModel"],controller:"ButtonsController",controllerAs:"button",link:function(o,l,i,a){function r(){return u(i.btnCheckboxTrue,!0)}function s(){return u(i.btnCheckboxFalse,!1)}function u(n,e){var t=o.$eval(n);return angular.isDefined(t)?t:e}t||e.warn("btn-checkbox is now deprecated. Use uib-btn-checkbox instead.");var c=a[0],d=a[1];l.find("input").css({display:"none"}),d.$render=function(){l.toggleClass(c.activeClass,angular.equals(d.$modelValue,r()))},l.bind(c.toggleEvent,function(){i.disabled||o.$apply(function(){d.$setViewValue(l.hasClass(c.activeClass)?s():r()),d.$render()})}),l.on("keypress",function(e){i.disabled||32!==e.which||n[0].activeElement!==l[0]||o.$apply(function(){d.$setViewValue(l.hasClass(c.activeClass)?s():r()),d.$render()})})}}}]);